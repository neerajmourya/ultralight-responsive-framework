/*
 * Ultralight Responsive Framework V1.0 - Light weight Responsive css framework for UI/UX Designing.
 * Copyright (C) 2017 Neeraj Mourya
 * Licensed under the MIT, License (https://opensource.org/licenses/MIT)
 */

// Define columns, gutter and container width
$columns:12;
$gutter:0.5rem;
$containerWidth:62.5em;

//Define Screens with name, min-width, max-width
$smallScreen:s,0,39.9375;
$mediumScreen:m,40,63.9375;
$largeScreen:l,64,74.9375;
$xLargeScreen:xl,75,89.9375;
$xxLargeScreen:xxl,90,119.9375;
$xxxLargeScreen:xxxl,120,256;

//define components border radius;
$compradius:3px;
//define form components color
$highlightcolor:#66ccff;
$formcompbrdrcolor:#cccccc;

//define color schemes
$boxtxtlightcolor:rgba(255,255,255,0.8);
$boxtxtdarkcolor:rgba(28,37,65,0.9);


$primcolor:#004e98;
$scndcolor:#dce1e7;
$infocolor:#613f75;
$sucscolor:#1B998B;
$warncolor:#d95d39;
$dngrcolor:#B93848;
$lightcolor:#ffffff;
$darkcolor:#1C2541;

$primbrdrcolor:#074076;
$scndbrdrcolor:#C4CCD3;
$infobrdrcolor:#513A5E;
$sucsbrdrcolor:#1E8A7E;
$warnbrdrcolor:#c55838;
$dngrbrdrcolor:#A43946;
$lightbrdrcolor:#dddddd;
$darkbrdrcolor:#191E2D;

$primhvrcolor:#065FB3;
$scndhvrcolor:#C4CCD3;
$infohvrcolor:#865BA0;
$sucshvrcolor:#5DA19A;
$warnhvrcolor:#D28771;
$dngrhvrcolor:#C45764;
$lighthvrcolor:#eeeeee;
$darkhvrcolor:#0B132B;


//Add screens to the list
$screens: $smallScreen, $mediumScreen, $largeScreen, $xLargeScreen, $xxLargeScreen, $xxxLargeScreen;
body {
    width: 100%;
    margin: 0px;
    padding: 0px;	
}
.flht{
    float:left;
}
.frht{
    float:right;
}
.cntr{
    width: $containerWidth;
    max-width: 100%;
    margin: 0 auto;
}
.cntr-fluid{
    width: 100%;
}
.inlblk{
    display:inline-block !important;
}
.rw::before, .rw::after, .clrbox::before, .clrbox::after {
    content: " ";
    display: table;
}
.rw::after, .clrbox::after {
    clear: both;
}
.cl {
    float: left;
    width:100%;
    padding: 0 $gutter;
}
.rw.out{
    width:auto;
    margin-left: -$gutter;
    margin-right: -$gutter;    
}
.rw.ngt>.cl {
    padding: 0;
}
.tbl{
    display:table;
    width:100%;
    border-collapse: collapse;
}
.rw.tbl{
    border-collapse: separate;
}
.tblwrap{
    width:100%;
    overflow: auto;
}
.tblwrap>table.tbl{
    min-width:768px;
}
.tcl{
    display: table-cell;
    width:auto;
}
.vtop{
    vertical-align: top;
}
.vmid{
    vertical-align: middle;
}
.vbot{
    vertical-align: bottom;
}
html, body, div {
    position: relative;
}
*{
    box-sizing: border-box;
}
img{
    max-width: 100%;
}

// Navigation or Menu Styles
ul.menu, ul.menu *{    
    display: block;
    margin:0px;
    padding: 0px;
}
ul.menu::before, ul.menu::after{
    content: " ";
    display: table; }

ul.menu::after{
    clear: both; }

ul.menu, ul.menu li{
    position:relative;
}
ul.menu li{
    margin:0px;
    list-style: none;
}
ul.menu li a{
    padding: 0 1rem;
    text-decoration: none;
    line-height: 2.5;
}
ul.menu ul{
    position: absolute;
    display: block;
    top: 0;
    left:100%;
    /*width:100%;*/
    visibility: hidden;
    max-height:0px;
    min-width: 180px;
    z-index: 100;
    background-color:#fff;
    border:1px solid #ddd;
    transition: visibility 0.3s, max-height 0.3s ease-out;
    overflow: hidden;
}
ul.menu.hover li:hover>ul,
ul.menu li.dropped>ul{
    visibility: visible;
    max-height: 700px;
    transition: visibility 2s, max-height 2s ease-out;
}
ul.menu.hover ul,
ul.menu li.ovfvis>ul{
    overflow: visible;
}
.nav{
    z-index: 9999;
}
.nav ul.menu li a{
    line-height: 3.5;
}
.nav ul.menu li li a{
    line-height: 2.5;
}
/*********Horizontal*********/
ul.menu.hrtl li{
    float:left;
}
ul.menu.hrtl li li{
    float:none;
}
ul.menu.hrtl ul{
    top:100%;
    left:0;
}
ul.menu.hrtl ul ul{
    top:0;
    left:100%;
}
ul.menu.hrtl ul.rht{
    left:unset;
    right:0;
}
ul.menu.hrtl ul.rht ul{
    left:unset;
    right:100%;
}
/*********Accordian*********/
ul.menu.acdn ul{
    position: relative;
    left:0;
}

// placeholder to be extended by shw for all screens
%hidshw {
    display:none;
}
// display none for all shw initially for all screens
@for $i from 1 through length($screens) {
    $screen: nth($screens, $i);
    $name: nth($screen, 1); 
    .#{$name}shw{
        @extend %hidshw; // extending placeholder %hidshw
    }
}

// mixin to define styles for a screen
@mixin screenStyles($screen){
    $name: nth($screen, 1);

    @if $name!=(nth((nth($screens, 1)), 1)){
        // display block column for screen
        .#{$name}cl{
            display:block;
            float: left;
            width:100%;
        } 
        //display table-cell for screen
        .#{$name}tcl{
            float:none;
            display:table-cell;
            width:auto;
        }
    }

    // exp, hid, shw classes for each screen
    .#{$name}exp, .#{$name}exp>*{
        width:100%;
    }
    .#{$name}hid{
        display:none;
    }
    .#{$name}shw{
        display:block;
    }

    // columns styles by looping through the number of columns
    @for $col from 1 through $columns{
        // Calculate the width of the column
        $width:($col * 100% / $columns);
        .#{$name}#{$col}{
            width: $width;
        }

        // pus, pul, off classes for each columns except last column
        @if $col!=$columns{
            .#{$name}pus#{$col}{
                left:$width;
            }
            .#{$name}pul#{$col}{
                left:-$width;
            }
            .#{$name}off#{$col}{
                margin-left:$width;
            }
        }
    }

    // Navigation or Menu Styles
    ul.menu.#{$name}vrtl li{
        float:none;
    }
    ul.menu.#{$name}vrtl ul{
        position:absolute;
        top:0;
        left:100%;
    }
    ul.menu.#{$name}hrtl li{
        float:left;
    }
    ul.menu.#{$name}hrtl li li{
        float:none;
    }
    ul.menu.#{$name}hrtl ul{
        position:absolute;
        top:100%;
        left:0;
    }
    ul.menu.#{$name}hrtl ul ul{
        top:0;
        left:100%;
    }
    ul.menu.#{$name}acdn ul, ul.menu.#{$name}acdn ul ul{
        position: relative;
        left:0;
    }
}

// call mixin screenStyles to define styles for first screen
@include screenStyles(nth($screens, 1));
// call mixin screenStyles to define styles for screens from 2nd to last
@for $i from 2 through length($screens) {
    $screen: nth($screens, $i); 
    $minWidth: nth($screen, 2);
    @media screen and (min-width:#{$minWidth}em){
        @include screenStyles($screen);  
    }
}

// placeholder to be extended by onlyhid classes for all screens
%shwonlyhid {
    display:block;
}
// display block for all onlyhid initially for all screens
@for $i from 1 through length($screens) {
    $screen: nth($screens, $i);
    $name: nth($screen, 1); 
    .#{$name}onlyhid{
        @extend %shwonlyhid; // extending placeholder %shwonlyhid
    }
}

// placeholder to be extended by onlyshw classes for all screens
%hidonlyshw {
    display:none;
}
// display none for all onlyshw initially for all screens
@for $i from 1 through length($screens) {
    $screen: nth($screens, $i);
    $name: nth($screen, 1); 
    .#{$name}onlyshw{
        @extend %hidonlyshw; // extending placeholder %hidonlyshw
    }
}

// onlyhid, onlyshw classes for each screen
@for $i from 1 through length($screens) {
    $screen: nth($screens, $i);
    $minWidth: nth($screen, 2);
    $maxWidth: nth($screen, 3);
    $name: nth($screen, 1); 
    @media screen and (min-width:#{$minWidth}em) and (maxWidth:#{$maxWidth}em){
        .#{$name}onlyhid{
            display:none;
        }
        .#{$name}onlyshw{
            display:block;
        }
    }
}

// Navigation or Menu styles
ul.menu .ovflw{
    right:0;
}
ul.menu .ovflw .ovflw{
    right:100%;
}

// placeholder to be extended by hrtl for all screens
%hrtl {
    left: auto;
}
ul.menu.hrtl .ovflw{
    @extend %hrtl; // extending placeholder %hrtl
}
// left auto for all hrtl initially for all screens
@for $i from 1 through length($screens) {
    $screen: nth($screens, $i);
    $name: nth($screen, 1); 
    ul.menu.#{$name}hrtl .ovflw{
        @extend %hrtl; // extending placeholder %hrtl
    }
}

//Text Styles
/* Text Styles */
body,input,button {
    font-family: "Helvetica Neue", Arial, "Liberation Sans", FreeSans, sans-serif;
}

pre,
code {
    font-family: "DejaVu Sans Mono", Menlo, Consolas, monospace;
}

hr {
    border: 0 solid #ccc;
    border-top-width: 1px;
    clear: both;
    height: 0;
}

/* `Headings
----------------------------------------------------------------------------------------------------*/

h1 {
    font-size: 2.5rem;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size: 1.7rem;
}

h4 {
    font-size: 1.5rem;
}

h5 {
    font-size: 1.25rem;
}

h6 {
    font-size: 1.1rem;
}

/* `Spacing
----------------------------------------------------------------------------------------------------*/

ol {
    list-style: decimal;
}

ul {
    list-style: disc;
}

li {
    margin-left: .5rem;
}

p,
dl,
hr,
h1,
h2,
h3,
h4,
h5,
h6,
ol,
ul,
pre,
table,
address,
fieldset,
figure {
    margin-top:0rem;
    margin-bottom: .5rem;
}

/* `Alignments
----------------------------------------------------------------------------------------------------*/
.txtlht{
    text-align:left;
}
.txtcnt{
    text-align:center;
}
.txtrht{
    text-align:right;
}


// Form Styles
/* Form Styles */
label{
    display: inline-block;
    margin-bottom:0.25em;
    font-weight:bold;
}
input,textarea,select, button, .btn, .inpgrp, .fldgrp{
    font-size: 1em;
    margin-bottom:1em;
}
.fldgrp input, .fldgrp textarea, .fldgrp select, .fldgrp button, .fldgrp .btn, .fldgrp .inpgrp, button, .btn{
    margin-bottom:0em;
}
input[type=radio], input[type=checkbox]{
    margin-bottom:0.25em;
}
input[type=text],
input[type=password],
input[type=email],
input[type=number],
input[type=tel],
textarea,
select,
.inpadn{
    border:1px solid #{$formcompbrdrcolor};
    height:2.4em;
    padding: 0em 0.5em;
}
select option{
    padding: 0.15em 0.5em;
}
input[type=text]:focus,
input[type=password]:focus,
input[type=email]:focus,
input[type=number]:focus,
input[type=tel]:focus,
textarea:focus,
select:focus,
button:focus,
.btn:focus{
    border-color: #{$highlightcolor};
    box-shadow: 0px 0px 3px #{$highlightcolor};
}
input::placeholder{
    color:rgba(100,100,100,0.8);
}
button, button:visited,
.btn, .btn:visited{    
    display: inline-block;
    padding: 0.5em 1.5em;
    background-color: #{$lightcolor};
    border:1px solid #{$lightbrdrcolor};
    cursor:pointer;
    text-decoration: none;
}
button:hover, button:active,
.btn:hover, .btn:active{
    background-color: #{$lighthvrcolor};
}
/*input groups*/
.inpgrp{
    display: table;
}
.inpgrp .input,.inpgrp input[type=radio], .inpgrp input[type=checkbox]{
    margin-bottom:0px;
}
.inpgrp>*{
    display:table-cell;
    vertical-align: middle;
}
.inpgrp>.input{
    width:100%;
}
.inpgrp>.inpadn{
    width:1%;
    background-color: #f5f5f5;
}
.inpgrp{
    border:1px solid #{$formcompbrdrcolor};
    border-radius:#{$compradius};
}
.inpgrp .input, .inpgrp .inpadn{
    border:none;
    border-right:1px solid #{$formcompbrdrcolor};
    height:2.3em;
}

.inpgrp.naked .input, .inpgrp.naked .inpadn{
    background:none;
    border:none;
}

/*Error Fields*/
.fldgrp.err label,
.fldgrp.err .inpadn{
    color:#{$dngrcolor};
}
.fldgrp.err input,
.fldgrp.err textarea,
.fldgrp.err select,
.fldgrp.err .inpgrp{
    border-color: #{$dngrbrdrcolor};    
}
.fldgrp.err input:focus,
.fldgrp.err textarea:focus,
.fldgrp.err select:focus,
.fldgrp.err .inpgrp:focus{
    box-shadow: 0 0 5px #{$dngrcolor};
}
.fldgrp.err .inpgrp input{
    border-color: #{$formcompbrdrcolor};
}

/*Border Radius*/
input[type=text],
input[type=password],
input[type=email],
input[type=number],
input[type=tel],
textarea,
select,
button,
.btn{
    border-radius: #{$compradius};
}
.inpgrp input, .inpgrp select{
    border-radius:0px;
}
.inpgrp input:first-child, .inpgrp .inpadn:first-child{
    border-top-left-radius: 3px;
    border-bottom-left-radius: 3px;
}
.inpgrp input:last-child, .inpgrp .inpadn:last-child{
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-right: none;
}
.inpgrp input:focus{
    border-size:1px;
}

/*checkbox*/
.chkbox, .radio{
    width: auto;
}
.chkbox .check, .chkbox .text,
.radio .circle, .radio .text{
    display: inline-block;
    vertical-align:middle;
}
.chkbox .check, .radio .circle{   
    width: 20px;
    height: 20px;
    border: 1px solid #{$formcompbrdrcolor};
    //box-shadow: inset 0px 0px 3px rgba(0,0,0,0.4);
    transition: 0.4s all;
}
.radio .circle{
    border-radius: 100%;
}
.chkbox input:checked + .check,
.radio input:checked + .circle{
    border-color:#{$primbrdrcolor};
    background-color:#{$primcolor};
}
.chkbox input:checked + .check{    
    background-image: url("data:image/svg+xml;utf8,<svg version='1.1' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' xmlns:cc='http://creativecommons.org/ns' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns'><metadata><rdf:RDF><cc:Work rdf:about=''><dc:format>image/svg+xml</dc:format><dc:type rdf:resource='http://purl.org/dc/dcmitype/StillImage'/><dc:title/></cc:Work></rdf:RDF></metadata><path d='m19.664 2.7119-10.439 10.7-4.8899-4.6355-3.4357 3.4375 8.3256 8.074 13.876-14.14z' fill='rgba(255,255,255,1)'/></svg>");
}
.radio input:checked + .circle{    
    background-image: url("data:image/svg+xml;utf8,<svg version='1.1' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' xmlns:cc='http://creativecommons.org/ns' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns'><circle cx='12' cy='12' r='5.64' fill='rgba(255,255,255,1)'/></svg>");
}
/*Radio*/
/*Push Switch*/
.pusswch input:checked + .btn,
.pusswch input:checked + .btn:visited{
    box-shadow: inset 0px 0px 7px #aaa;
}
/*Toggle switch*/
.tglswch{
    width: 50px;
    height: 28px;
    margin-bottom: 1em;
    position:relative;
}
.tglswch input,
.pusswch input,
.chkbox input,
.radio input{
    display: none;
}
/* Toggle Switch slider */
.tglswch .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #{$scndcolor};
    -webkit-transition: .4s;
    transition: .4s;
    box-sizing: border-box;
    border: 1px solid #{formcompbrdrcolor};
}

.tglswch .slider:before {
    position: absolute;
    content: "";
    height: 22px;
    width: 22px;
    left: 2px;
    bottom: 3px;
    background-color: #fff;
    -webkit-transition: .4s;
    transition: .4s;
}

.tglswch input:checked + .slider {
    background-color: #{$primcolor};
    border-color: #{$primbrdrcolor};
}

.tglswch input:focus + .slider {
    box-shadow: 0 0 1px #{$highlightcolor};
}

.tglswch input:checked + .slider:before {
    -webkit-transform: translateX(23px);
    -ms-transform: translateX(23px);
    transform: translateX(23px);
}
/* Rounded sliders */
.tglswch .slider.round {
    border-radius: #{$compradius};
}

.tglswch .slider.round:before {
    border-radius: #{$compradius};
}

.btn.sm{
    padding: 0.4em 0.9em;
    font-size:90%;
}
.btn.lg{
    padding: 0.8em 2.1em;
    font-size:110%;
}


/*Table schemes*/
.tbl th, .tbl td{
    padding:8px;
    background-color: #{$lightcolor};
}
.tbl.sm th, .tbl.sm td{
    padding:5px;
}
.tbl.lg th, .tbl.lg td{
    padding:10px;
}

.tbl.fill.prim tr th,
.tbl.fill.prim tr td{
    background-color: #{$primcolor};
}
.tbl.fill.scnd tr th,
.tbl.fill.scnd tr td{
    background-color: #{$scndcolor};
}
.tbl.fill.info tr th,
.tbl.fill.info tr td{
    background-color: #{$infocolor};
}
.tbl.fill.sucs tr th,
.tbl.fill.sucs tr td{
    background-color: #{$sucscolor};
}
.tbl.fill.warn tr th,
.tbl.fill.warn tr td{
    background-color: #{$warncolor};
}
.tbl.fill.dngr tr th,
.tbl.fill.dngr tr td{
    background-color: #{$dngrcolor};
}
.tbl.fill.light tr th,
.tbl.fill.light tr td{
    background-color: #{$lightcolor};
}
.tbl.fill.dark tr th,
.tbl.fill.dark tr td{
    background-color: #{$darkcolor};
}
.tbl.strip tr:nth-child(2n) th,
.tbl.strip tr:nth-child(2n) td{
    background-color: #00000010;
}
.tbl.strip thead th{
    background-color: #00000010 !important;
}
.tbl.strip.thvr tr:nth-child(2n):hover th,
.tbl.strip.thvr tr:nth-child(2n):hover td,
.fill.thvr tr:hover th,
.fill.thvr tr:hover td{
    background-color: #aaaaaa50;
}
.tbl.lined th, .tbl.lined td{
    border-bottom: 1px solid #aaaaaa50;
}

.cbrdr th, .cbrdr td{
    border:1px solid #ddd;
}
.cbrdr.prim th, .cbrdr.prim td{
    border-color: #{$primbrdrcolor};
}
.cbrdr.scnd th, .cbrdr.scnd td{
    border-color: #{$scndbrdrcolor};
}
.cbrdr.sucs th, .cbrdr.sucs td{
    border-color: #{$sucsbrdrcolor};
}
.cbrdr.info th, .cbrdr.info td{
    border-color: #{$infobrdrcolor};
}
.cbrdr.warn th, .cbrdr.warn td{
    border-color: #{$warnbrdrcolor};
}
.cbrdr.dngr th, .cbrdr.dngr td{
    border-color: #{$dngrbrdrcolor};
}
.cbrdr.light th, .cbrdr.light td{
    border-color: #{$lightbrdrcolor};
}
.cbrdr.dark th, .cbrdr.dark td{
    border-color: #{$darkbrdrcolor};
}

/*Box*/
.box{
    padding:1em;
}
.box.sm{
    padding:0.5em;
}
.box.lg{
    padding:2em;
}

/*Fills*/
.fill.prim, .fill.prim:visited{
    background-color: #{$primcolor};
    color: #{$boxtxtlightcolor};
}
.fill.scnd, .fill.scnd:visited{
    background-color: #{$scndcolor};
    color: #{$boxtxtdarkcolor};
}
.fill.info, .fill.info:visited{
    background-color: #{$infocolor};
    color: #{$boxtxtlightcolor};
}
.fill.sucs, .fill.sucs:visited{
    background-color: #{$sucscolor};
    color: #{$boxtxtlightcolor};
}
.fill.warn, .fill.warn:visited{
    background-color: #{$warncolor};
    color: #{$boxtxtlightcolor};
}
.fill.dngr, .fill.dngr:visited{
    background-color: #{$dngrcolor};
    color: #{$boxtxtlightcolor};
}
.fill.light, .fill.light:visited{
    background-color: #{$lightcolor};
    color: #{$boxtxtdarkcolor};
}
.fill.dark,.fill.dark:visited{
    background-color: #{$darkcolor};
    color: #{$boxtxtlightcolor};
}

.fill.prim.hvr:hover, .fill.prim.hvr:focus{
    background-color: #{$primhvrcolor};
}
.fill.scnd.hvr:hover, .fill.scnd.hvr:focus{
    background-color: #{$scndhvrcolor};
}
.fill.info.hvr:hover, .fill.info.hvr:focus{
    background-color: #{$infohvrcolor};
}
.fill.sucs.hvr:hover, .fill.sucs.hvr:focus{
    background-color: #{$sucshvrcolor};
}
.fill.warn.hvr:hover, .fill.warn.hvr:focus{
    background-color: #{$warnhvrcolor};
}
.fill.dngr.hvr:hover, .fill.dngr.hvr:focus{
    background-color: #{$dngrhvrcolor};
}
.fill.light.hvr:hover, .fill.light.hvr:focus{
    background-color: #{$lighthvrcolor};
}
.fill.dark.hvr:hover, .fill.dark.hvr:focus{
    background-color: #{$darkhvrcolor};
}

.f-0{
    background:none;
}

/*borders*/
.brdr.b-all{
    border:1px solid;
}
.brdr.b-top{
    border-top:1px solid;
}
.brdr.b-rht{
    border-right:1px solid;
}
.brdr.b-bot{
    border-bottom:1px solid;
}
.brdr.b-lht{
    border-left: 1px solid;
}
.brdr.round{
    border-radius:#{$compradius};
}
.brdr.circle{
    border-radius:100%;
    overflow:hidden;
}

.brdr{
    border-color: #ddd;
}
.brdr.prim{
    border-color: #{$primbrdrcolor};
}
.brdr.scnd{
    border-color: #{$scndbrdrcolor};
}
.brdr.info{
    border-color: #{$infobrdrcolor};
}
.brdr.sucs{
    border-color: #{$sucsbrdrcolor};
}
.brdr.warn{
    border-color: #{$warnbrdrcolor};
}
.brdr.dngr{
    border-color: #{$dngrbrdrcolor};
}
.brdr.light{
    border-color: #{$lightbrdrcolor};
}
.brdr.dark{
    border-color: #{$darkbrdrcolor};
}

.b-0{
    border:none;
}

/*Text*/
.txt.prim{
    color: #{$primcolor};
}
.txt.scnd{
    color: #{$scndcolor};
}
.txt.info{
    color: #{$infocolor};
}
.txt.sucs{
    color: #{$sucscolor};
}
.txt.warn{
    color: #{$warncolor};
}
.txt.dngr{
    color: #{$dngrcolor};
}
.txt.light{
    color: #{$lightcolor};
}
.txt.dark{
    color: #{$darkcolor};
}

/*Links*/
.links-light a, .links-light a:visited{
    color: #{$boxtxtlightcolor};
}
.links-light a:hover, .links-light a:focus{
    color: #{$lightcolor};
}
.links-dark a, .links-dark a:visited{
    color: #{$boxtxtdarkcolor};
}
.links-dark a:hover, .links-dark a:focus{
    color: #{$darkcolor};
}

/* Margins */
.m-0{
    margin:0px;
}
.mt-0{
    margin-top:0px;
}
.mt-1{
    margin-top:0.5em;
}
.mt-2{
    margin-top:1em;
}
.mt-3{
    margin-top:1.5em;
}
.mt-4{
    margin-top:2em;
}

.mr-0{
    margin-right:0px;
}
.mr-1{
    margin-right:0.5em;
}
.mr-2{
    margin-right:1em;
}
.mr-3{
    margin-right:1.5em;
}
.mr-4{
    margin-right:2em;
}

.mb-0{
    margin-bottom:0px;
}
.mb-1{
    margin-bottom:0.5em;
}
.mb-2{
    margin-bottom:1em;
}
.mb-3{
    margin-bottom:1.5em;
}
.mb-4{
    margin-bottom: 2em;
}

.ml-0{
    margin-left:0px;
}
.ml-1{
    margin-left:0.5em;
}
.ml-2{
    margin-left:1em;
}
.ml-3{
    margin-left:1.5em;
}
.ml-4{
    margin-left: 2em;
}


/* Paddings */
.p-0{
    padding:0px;
}
.pt-0{
    padding-top:0px;
}
.pt-1{
    padding-top:0.5em;
}
.pt-2{
    padding-top:1em;
}
.pt-3{
    padding-top:1.5em;
}
.pt-4{
    padding-top:2em;
}

.pr-0{
    padding-right:0px;
}
.pr-1{
    padding-right:0.5em;
}
.pr-2{
    padding-right:1em;
}
.pr-3{
    padding-right:1.5em;
}
.pr-4{
    padding-right:2em;
}

.pb-0{
    padding-bottom:0px;
}
.pb-1{
    padding-bottom:0.5em;
}
.pb-2{
    padding-bottom:1em;
}
.pb-3{
    padding-bottom:1.5em;
}
.pb-4{
    padding-bottom: 2em;
}

.pl-0{
    padding-left:0px;
}
.pl-1{
    padding-left:0.5em;
}
.pl-2{
    padding-left:1em;
}
.pl-3{
    padding-left:1.5em;
}
.pl-4{
    padding-left: 2em;
}
